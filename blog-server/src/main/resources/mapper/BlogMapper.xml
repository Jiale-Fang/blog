<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.fjl.server.dao.BlogDao">

    <select id="findHomePage" parameterType="pers.fjl.common.entity.QueryPageBean"
            resultType="pers.fjl.common.vo.BlogVO">
        SELECT b.blog_id, u.nickname, u.avatar, t.type_name, b.views, b.description, b.create_time ,b.recommend, b.published,
        b.update_time, b.title, b.published, b.first_picture, b.thumbs
        FROM blog b, user u, type t
        WHERE b.uid = u.uid AND b.type_id = t.type_id
        <if test="queryPageBean.queryString !=null">
            AND b.content LIKE '%${queryPageBean.queryString}%'
        </if>
        <if test="queryPageBean.typeId !=null">
            AND b.type_id = #{queryPageBean.typeId}
        </if>
        ORDER BY b.views DESC
        LIMIT ${queryPageBean.pageSize * (queryPageBean.currentPage-1)},#{queryPageBean.pageSize}
    </select>

    <select id="adminBlogPageCount" parameterType="pers.fjl.common.entity.QueryPageBean" resultType="java.lang.Integer">
    SELECT count(DISTINCT b.blog_id)
    FROM blog b, type t
        <if test="queryPageBean.tagId !=null">
            , tag tt, blog_tag bt
        </if>
    WHERE b.type_id = t.type_id
        <if test="queryPageBean.tagId !=null">
            AND (tt.tag_id = '${queryPageBean.tagId}' ) AND (bt.tag_id = tt.tag_id) AND (bt.blog_id = b.blog_id)
        </if>
        <if test="queryPageBean.queryString !=null">
            AND b.title LIKE '%${queryPageBean.queryString}%'
        </if>
        <if test="queryPageBean.copyright !=null">
            AND (b.copyright = '${queryPageBean.copyright}' )
        </if>
        <if test="queryPageBean.typeId !=null">
            AND (t.type_id = '${queryPageBean.typeId}' )
        </if>
    </select>

    <select id="adminBlogPage" parameterType="pers.fjl.common.entity.QueryPageBean" resultMap="adminBlogPageResultMap">
    SELECT b.blog_id, b.create_time, b.first_picture, b.published, b.title, b.views, b.thumbs, t.type_name, b.copyright
    FROM blog b, type t
        <if test="queryPageBean.tagId !=null">
            , tag tt, blog_tag bt
        </if>
    WHERE b.type_id = t.type_id
        <if test="queryPageBean.tagId !=null">
            AND (tt.tag_id = '${queryPageBean.tagId}' ) AND (bt.tag_id = tt.tag_id) AND (bt.blog_id = b.blog_id)
        </if>
        <if test="queryPageBean.queryString !=null">
            AND b.title LIKE '%${queryPageBean.queryString}%'
        </if>
        <if test="queryPageBean.copyright !=null">
            AND (b.copyright = '${queryPageBean.copyright}' )
        </if>
        <if test="queryPageBean.typeId !=null">
            AND (t.type_id = '${queryPageBean.typeId}' )
        </if>
    LIMIT ${queryPageBean.pageSize * (queryPageBean.currentPage-1)},#{queryPageBean.pageSize}
    </select>

    <!-- 通用查询映射结果 -->
    <resultMap id="adminBlogPageResultMap" type="pers.fjl.common.dto.BlogBackDTO" >
        <id column="blog_id" property="blogId"/>
        <result column="create_time" property="createTime"/>
        <result column="first_picture" property="firstPicture"/>
        <result column="published" property="published"/>
        <result column="title" property="title"/>
        <result column="views" property="views"/>
        <result column="thumbs" property="thumbs"/>
        <result column="copyright" property="copyright"/>
        <result column="type_name" property="typeName"/>
<!--        <collection property="tagDTOList" ofType="pers.fjl.common.po.Tag" javaType="ArrayList">-->
<!--            <id column="tag_id" property="tagId"/>-->
<!--            <result column="tag_name" property="tagName"/>-->
<!--        </collection>-->
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="pers.fjl.common.po.Blog">
        <id column="blog_id" property="blogId"/>
        <result column="title" property="title" />
        <result column="uid" property="uid" />
        <result column="content" property="content" />
        <result column="create_time" property="createTime" />
        <result column="first_picture" property="firstPicture" />
        <result column="flag" property="flag" />
        <result column="thumbs" property="thumbs" />
        <result column="published" property="published" />
        <result column="recommend" property="recommend" />
        <result column="copyright" property="copyright" />
        <result column="update_time" property="updateTime" />
        <result column="views" property="views" />
        <result column="type_id" property="typeId" />
        <result column="description" property="description" />
        <result column="appreciation" property="appreciation" />
        <result column="comment_able" property="commentAble" />
    </resultMap>

    <select id="findFavoritesPage" resultType="pers.fjl.common.vo.BlogVO">
        SELECT b.blog_id, b.title, b.description, t.type_name, b.create_time
        FROM  blog b, favorites f, type t
        WHERE ${uid} = f.uid AND f.blog_id = b.blog_id AND t.type_id = b.type_id
        <if test="queryPageBean.queryString !=null">
            AND b.title LIKE '%${queryPageBean.queryString}%'
        </if>
        ORDER BY f.create_time DESC
        LIMIT ${queryPageBean.pageSize * (queryPageBean.currentPage-1)},#{queryPageBean.pageSize}
    </select>

</mapper>
